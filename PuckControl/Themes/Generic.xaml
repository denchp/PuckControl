<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:pc="clr-namespace:PuckControl.Controls">


    <Style TargetType="{x:Type pc:HighScoreControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:HighScoreControl}">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="36" FontWeight="ExtraBold" Width="100" Text="Rank"/>
                            <TextBlock FontSize="36" FontWeight="ExtraBold" Width="300" Text="Name"/>
                            <TextBlock FontSize="36" FontWeight="ExtraBold" Width="200" Text="Score" />
                            <TextBlock FontSize="36" FontWeight="ExtraBold" Width="Auto" Text="Date"/>
                        </StackPanel>
                        <ListView ItemsSource="{Binding Scores}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="36" FontWeight="ExtraBold" Width="100" Text="{Binding Rank}"/>
                                        <TextBlock FontSize="36" FontWeight="ExtraBold" Width="300" Text="{Binding UserName}"/>
                                        <TextBlock FontSize="36" FontWeight="ExtraBold" Width="200" Text="{Binding FinalScore}" />
                                        <TextBlock FontSize="36" FontWeight="ExtraBold" Width="Auto" Text="{Binding DateString}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pc:TabButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:TabButton}">
                    <Button Height="60" Width="90">
                        <Label Content="{Binding Path=ButtonLabel}"/>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pc:TileButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:TileButton}">
                    <Button Height="100" Width="200" BorderThickness="0,0,0,0" Background="{Binding Path=BackgroundBrush}">
                        <Label FontSize="20" Content="{Binding ButtonLabel}"/>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pc:ComboSettingControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:ComboSettingControl}">
                    <StackPanel Orientation="Horizontal" Margin="10,10,10,10">
                        <Label Content="{Binding Path=Setting.Key}" MinWidth="150"/>
                        <ComboBox ItemsSource="{Binding Path=Setting.Options}" SelectedValuePath="Key" Name="cmbOptions">
                            <ComboBox.SelectedValue>
                                <Binding Path="Setting.SelectedOption" Mode="TwoWay"/>
                            </ComboBox.SelectedValue>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Key}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pc:TextSettingControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:TextSettingControl}">
                    <StackPanel Orientation="Horizontal" Margin="10,10,10,10">
                        <Label Content="{Binding Path=Setting.Key}" MinWidth="150"/>
                        <TextBox Text="{Binding Path=Setting.SelectedOption}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pc:UserRadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Cursor="Hand">
                        <!--Text element-->
                        <Border Width="120" Height="60" CornerRadius="3" BorderBrush="#FFE2E2E2" BorderThickness="1">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <!--We don't need any bullet, cause our border is the switching element-->
                                <Border Margin="5,0,100,0" Background="#FFCDCDCD" CornerRadius="1" Name="RadioMark" />
                                <!-- To change the apearance to button stripe 2, edit the margins! -->
                            </Grid>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="White" Offset="0" />
                                    <GradientStop Color="#FFE2E2E2" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </BulletDecorator>

                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Background" Value="Gold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pc:ControlScroller}">
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:ControlScroller}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" x:Name="Button_Left"></Button>
                        <ScrollContentPresenter Grid.Column="1"/>
                        <Button Grid.Column="2" x:Name="Button_Right"></Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>                
    </Style>
</ResourceDictionary>
